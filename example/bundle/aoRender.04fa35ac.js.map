{"mappings":"imBAsBA,IAAAA,EACAC,E,iFArBA,IAAIC,EAAU,GAoBdF,EAlBA,SAAkBG,GAGhB,IAFA,IAAIC,EAAOC,OAAOD,KAAKD,GAEdG,EAAI,EAAGA,EAAIF,EAAKG,OAAQD,IAC/BJ,EAAQE,EAAKE,IAAMH,EAAMC,EAAKE,G,EAelCL,EAXA,SAAiBO,GACf,IAAIC,EAAWP,EAAQM,GAEvB,GAAgB,MAAZC,EACF,MAAM,IAAIC,MAAM,oCAAsCF,GAGxD,OAAOC,C,qFCnBT,IAAAE,EAAAC,EAAA,S,0BAIO,MAAMC,UAA+BF,EAAAG,0BAE3CC,cAECC,QACAC,KAAKC,aAAe,IAAIC,EAAAC,qB,CAIzBC,SAAUC,EAAOC,EAAU,IAE1B,MAfFL,aAeUA,GAAiBD,MAf3BO,SAgBUA,EAhBVC,UAgBoBA,EAhBpBC,SAgB+BA,EAhB/BC,OAgByCA,EAhBzCC,WAgBiDA,GAAeX,KAAKY,UAAWP,GAExEQ,EAAa,CAAEC,SAAUC,EAAAC,OAAQV,EAASW,YAAa,GAE7D,OADmBhB,EAAaG,SAAUG,EAAUM,GAClCK,MAAMC,IAEhB,CAtBVd,MAuBIA,EAvBJG,UAwBIA,EAxBJC,SAyBIA,EAzBJC,OA0BIA,EA1BJC,WA2BIA,EA3BJQ,IA4BIA,K,CAOHC,UAECpB,KAAKC,aAAamB,S,yFCrCpB,IAAAC,EAAA1B,EAAA,S,0BAIO,MAAM2B,EAEZV,UAAWP,GAEVA,EAAQkB,MAAMC,QAASnB,GAAUA,EAAQ,CAAEA,GAE3C,MAAMoB,EAAS,GACTf,EAAS,GAEf,IAAM,IAAIrB,EAAI,EAAGqC,EAAIrB,EAAMf,OAAQD,EAAIqC,EAAGrC,IAEzCgB,EAAOhB,GAAIsC,iBAAiBC,IAE3B,GAAKA,EAAEC,eAAiBD,EAAEE,QAAUF,EAAEG,sBAAwB,CAE7D,MAAMC,EAAY,IAAIjB,EAAAkB,wBAAyBL,GAC/CI,EAAUE,WAAa,CAAE,WAAY,QAAS,SAAU,UAAW,KAAM,OACzEF,EAAUG,sBAAuB,EACjC,MAAMC,EAAO,IAAIf,EAAAgB,KAChBL,EAAU5B,WACVwB,EAAEU,UAEHF,EAAKG,YAAYC,KAAMZ,EAAEW,aACzBH,EAAKK,OAAOD,KAAMZ,EAAEW,aACpBH,EAAKK,OAAOC,UAAWN,EAAKO,SAAUP,EAAKQ,WAAYR,EAAKS,OAC5DpB,EAAOqB,KAAMV,E,MAEFR,EAAEE,OAEbL,EAAOqB,KAAMlB,IAEFA,EAAEmB,iBAAmBnB,EAAEoB,cAElCtC,EAAOoC,KAAMlB,EAAG,IAQnB,MAAO,IACHqB,EAAAC,YAAazB,EAAQ,CACvBS,WAAY,CAAE,WAAY,SAAU,UAAW,KAAM,WA/CzDxB,OAiDGA,E,CAKFN,SAAUC,EAAOC,EAAU,IAE1B,MAxDFE,UAwDUA,EAxDVC,SAwDqBA,EAxDrBF,SAwD+BA,EAxD/BG,OAwDyCA,GAAWV,KAAKY,UAAWP,GAC5DQ,EAAa,CAAEC,SAAUC,EAAAC,OAAQV,EAASW,YAAa,GAC7D,MAAO,CA1DTZ,MA2DGA,EA3DHG,UA4DGA,EA5DHC,SA6DGA,EA7DHC,OA8DGA,EACAS,IAAK,IAAIJ,EAAAoC,QAAS5C,EAAUM,G,qFC/D/B,IAAAQ,EAAA1B,EAAA,S,aAGO,MAAMyD,EAEZtD,cAECE,KAAKqD,SAAU,EACfrD,KAAKsD,OAAS,IAAIC,OAAM5D,EAAA,UACxBK,KAAKsD,OAAOE,QAAUC,IAErB,MAAKA,EAAEC,QAEA,IAAIjE,MAAO,kEAAmEgE,EAAEC,YAIhF,IAAIjE,MAAO,sDAAuD,C,CAQ3EW,SAAUG,EAAUD,EAAU,IAE7B,GAAKN,KAAKqD,QAET,MAAM,IAAI5D,MAAO,+CAIlB,GAAqB,OAAhBO,KAAKsD,OAET,MAAM,IAAI7D,MAAO,oDAIlB,MAvCF6D,OAuCUA,GAAWtD,KAGnB,OAFAA,KAAKqD,SAAU,EAER,IAAIM,SAAS,CAAEC,EAASC,KAE9BP,EAAOE,QAAUC,IAEhBI,EAAQ,IAAIpE,MAAO,0BAA2BgE,EAAEC,YAChD1D,KAAKqD,SAAU,CAAK,EAIrBC,EAAOQ,UAAYL,IAElBzD,KAAKqD,SAAU,EACf,MAtDJU,KAsDYA,GAASN,EAEjB,GAAKM,EAAKC,MAETH,EAAQ,IAAIpE,MAAOsE,EAAKC,QACxBV,EAAOQ,UAAY,UAEb,GAAKC,EAAKE,WAAa,CAE7B,MA/DLA,WA+DaA,EA/DbtB,SA+DyBA,GAAaoB,EAC3B5C,EAAM+C,EAAAf,QAAQgB,YAAaF,EAAY1D,EAAU,CAAE6D,UAAU,IAC7DC,EAAgBjF,OAAOkF,OAAQ,CAEpCC,gBAAgB,GAEdjE,GAKH,GADAC,EAAS2B,WAAWS,SAAS6B,MAAQ7B,EAChCpC,EAASkE,MAEblE,EAASkE,MAAMD,MAAQP,EAAWQ,UAE5B,CAEN,MAAMC,EAAW,IAAIrD,EAAAsD,gBAAiBV,EAAWQ,MAAO,GAAG,GAC3DlE,EAAS6D,SAAUM,E,CAIfL,EAAcE,iBAElBhE,EAASqE,YAAczD,EAAI0D,eAAgB,IAAIxD,EAAAyD,OAIhDlB,EAASzC,GACTmC,EAAOQ,UAAY,I,MAERxD,EAAQyE,YAEnBzE,EAAQyE,WAAYhB,EAAKiB,SAAU,EAMrC,MAAMP,EAAQlE,EAASkE,MAAQlE,EAASkE,MAAMD,MAAQ,KAChDS,EAAW1E,EAAS2B,WAAWS,SAAS6B,MAE9C,GAAKS,EAASC,8BAAgCT,GAASA,EAAMS,6BAE5D,MAAM,IAAIzF,MAAO,oGAIlB,MAAM0F,EAAiB,CAAEF,GACpBR,GAEJU,EAAerC,KAAM2B,GAItBnB,EAAO8B,YAAa,CAtHvBX,MAwHIA,EAxHJ9B,SAyHIsC,EACA3E,QAAS,IACLA,EACHyE,WAAY,KACZM,yBAA0BC,QAAShF,EAAQyE,YAC3CQ,OAAQ,IAAMhF,EAASgF,UAGtBJ,EAAeK,KAAKC,GAAOA,EAAIC,SAAU,G,CAM9CtE,UAECpB,KAAKsD,OAAOqC,YACZ3F,KAAKsD,OAAS,I,CAIfqC,YAECC,QAAQC,KAAM,4EACd7F,KAAKoB,S,wCCjJP,IAAA0E,EAAAnG,EAAA,SACA,IAAIoG,EAAG,IAAAC,IAAuBrG,EAAA,SAAAiE,QAA6C,SAAQqC,OAAAC,KAAAC,KACnFC,EAAAC,QAAiBP,EAAUC,EAAIO,WAAYP,EAAIQ,QAAQ,E,sCCAvDH,EAAAC,QAAiB,SAAUG,EAAWD,EAAQE,GAC5C,GAAIF,IAAWG,KAAKC,SAASJ,OAG3B,OAAOC,EAGP,IAAII,EAASH,EAAQ,UAAYI,KAAKC,UAAUN,GAAa,IAAM,iBAAmBK,KAAKC,UAAUN,GAAa,KAClH,OAAOR,IAAIe,gBAAgB,IAAIC,KAAK,CAACJ,GAAS,CAC5CK,KAAM,2B,KCXZtH,EAAA,SAAAuH,SAA8CL,KAAKM,MAAM","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","src/workers/PathTracingSceneWorker.js","src/core/PathTracingSceneGenerator.js","node_modules/three-mesh-bvh/src/workers/GenerateMeshBVHWorker.js","node_modules/@parcel/runtime-js/lib/runtime-fcae82002fa0f25d.js","node_modules/@parcel/runtime-js/lib/helpers/get-worker-url.js","node_modules/@parcel/runtime-js/lib/runtime-f2d4c7eda0b629b8.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","import { PathTracingSceneGenerator } from '../core/PathTracingSceneGenerator.js';\nimport { SAH } from 'three-mesh-bvh';\nimport { GenerateMeshBVHWorker } from 'three-mesh-bvh/src/workers/GenerateMeshBVHWorker.js';\n\nexport class PathTracingSceneWorker extends PathTracingSceneGenerator {\n\n\tconstructor() {\n\n\t\tsuper();\n\t\tthis.bvhGenerator = new GenerateMeshBVHWorker();\n\n\t}\n\n\tgenerate( scene, options = {} ) {\n\n\t\tconst { bvhGenerator } = this;\n\t\tconst { geometry, materials, textures, lights, spotLights } = this.prepScene( scene );\n\n\t\tconst bvhOptions = { strategy: SAH, ...options, maxLeafTris: 1 };\n\t\tconst bvhPromise = bvhGenerator.generate( geometry, bvhOptions );\n\t\treturn bvhPromise.then( bvh => {\n\n\t\t\treturn {\n\t\t\t\tscene,\n\t\t\t\tmaterials,\n\t\t\t\ttextures,\n\t\t\t\tlights,\n\t\t\t\tspotLights,\n\t\t\t\tbvh,\n\t\t\t};\n\n\t\t} );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.bvhGenerator.dispose();\n\n\t}\n\n}\n","import { Mesh } from 'three';\nimport { SAH, MeshBVH, StaticGeometryGenerator } from 'three-mesh-bvh';\nimport { mergeMeshes } from '../utils/GeometryPreparationUtils.js';\n\nexport class PathTracingSceneGenerator {\n\n\tprepScene( scene ) {\n\n\t\tscene = Array.isArray( scene ) ? scene : [ scene ];\n\n\t\tconst meshes = [];\n\t\tconst lights = [];\n\n\t\tfor ( let i = 0, l = scene.length; i < l; i ++ ) {\n\n\t\t\tscene[ i ].traverseVisible( c => {\n\n\t\t\t\tif ( c.isSkinnedMesh || c.isMesh && c.morphTargetInfluences ) {\n\n\t\t\t\t\tconst generator = new StaticGeometryGenerator( c );\n\t\t\t\t\tgenerator.attributes = [ 'position', 'color', 'normal', 'tangent', 'uv', 'uv2' ];\n\t\t\t\t\tgenerator.applyWorldTransforms = false;\n\t\t\t\t\tconst mesh = new Mesh(\n\t\t\t\t\t\tgenerator.generate(),\n\t\t\t\t\t\tc.material,\n\t\t\t\t\t);\n\t\t\t\t\tmesh.matrixWorld.copy( c.matrixWorld );\n\t\t\t\t\tmesh.matrix.copy( c.matrixWorld );\n\t\t\t\t\tmesh.matrix.decompose( mesh.position, mesh.quaternion, mesh.scale );\n\t\t\t\t\tmeshes.push( mesh );\n\n\t\t\t\t} else if ( c.isMesh ) {\n\n\t\t\t\t\tmeshes.push( c );\n\n\t\t\t\t} else if ( c.isRectAreaLight || c.isSpotLight ) {\n\n\t\t\t\t\tlights.push( c );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t}\n\n\t\treturn {\n\t\t\t...mergeMeshes( meshes, {\n\t\t\t\tattributes: [ 'position', 'normal', 'tangent', 'uv', 'color' ],\n\t\t\t} ),\n\t\t\tlights,\n\t\t};\n\n\t}\n\n\tgenerate( scene, options = {} ) {\n\n\t\tconst { materials, textures, geometry, lights } = this.prepScene( scene );\n\t\tconst bvhOptions = { strategy: SAH, ...options, maxLeafTris: 1 };\n\t\treturn {\n\t\t\tscene,\n\t\t\tmaterials,\n\t\t\ttextures,\n\t\t\tlights,\n\t\t\tbvh: new MeshBVH( geometry, bvhOptions ),\n\t\t};\n\n\t}\n\n}\n","import { Box3, BufferAttribute } from 'three';\nimport { MeshBVH } from '../core/MeshBVH.js';\n\nexport class GenerateMeshBVHWorker {\n\n\tconstructor() {\n\n\t\tthis.running = false;\n\t\tthis.worker = new Worker( new URL( './generateAsync.worker.js', import.meta.url ), { type: 'module' } );\n\t\tthis.worker.onerror = e => {\n\n\t\t\tif ( e.message ) {\n\n\t\t\t\tthrow new Error( `GenerateMeshBVHWorker: Could not create Web Worker with error \"${ e.message }\"` );\n\n\t\t\t} else {\n\n\t\t\t\tthrow new Error( 'GenerateMeshBVHWorker: Could not create Web Worker.' );\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tgenerate( geometry, options = {} ) {\n\n\t\tif ( this.running ) {\n\n\t\t\tthrow new Error( 'GenerateMeshBVHWorker: Already running job.' );\n\n\t\t}\n\n\t\tif ( this.worker === null ) {\n\n\t\t\tthrow new Error( 'GenerateMeshBVHWorker: Worker has been disposed.' );\n\n\t\t}\n\n\t\tconst { worker } = this;\n\t\tthis.running = true;\n\n\t\treturn new Promise( ( resolve, reject ) => {\n\n\t\t\tworker.onerror = e => {\n\n\t\t\t\treject( new Error( `GenerateMeshBVHWorker: ${ e.message }` ) );\n\t\t\t\tthis.running = false;\n\n\t\t\t};\n\n\t\t\tworker.onmessage = e => {\n\n\t\t\t\tthis.running = false;\n\t\t\t\tconst { data } = e;\n\n\t\t\t\tif ( data.error ) {\n\n\t\t\t\t\treject( new Error( data.error ) );\n\t\t\t\t\tworker.onmessage = null;\n\n\t\t\t\t} else if ( data.serialized ) {\n\n\t\t\t\t\tconst { serialized, position } = data;\n\t\t\t\t\tconst bvh = MeshBVH.deserialize( serialized, geometry, { setIndex: false } );\n\t\t\t\t\tconst boundsOptions = Object.assign( {\n\n\t\t\t\t\t\tsetBoundingBox: true,\n\n\t\t\t\t\t}, options );\n\n\t\t\t\t\t// we need to replace the arrays because they're neutered entirely by the\n\t\t\t\t\t// webworker transfer.\n\t\t\t\t\tgeometry.attributes.position.array = position;\n\t\t\t\t\tif ( geometry.index ) {\n\n\t\t\t\t\t\tgeometry.index.array = serialized.index;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst newIndex = new BufferAttribute( serialized.index, 1, false );\n\t\t\t\t\t\tgeometry.setIndex( newIndex );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( boundsOptions.setBoundingBox ) {\n\n\t\t\t\t\t\tgeometry.boundingBox = bvh.getBoundingBox( new Box3() );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tresolve( bvh );\n\t\t\t\t\tworker.onmessage = null;\n\n\t\t\t\t} else if ( options.onProgress ) {\n\n\t\t\t\t\toptions.onProgress( data.progress );\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t\tconst index = geometry.index ? geometry.index.array : null;\n\t\t\tconst position = geometry.attributes.position.array;\n\n\t\t\tif ( position.isInterleavedBufferAttribute || index && index.isInterleavedBufferAttribute ) {\n\n\t\t\t\tthrow new Error( 'GenerateMeshBVHWorker: InterleavedBufferAttribute are not supported for the geometry attributes.' );\n\n\t\t\t}\n\n\t\t\tconst transferrables = [ position ];\n\t\t\tif ( index ) {\n\n\t\t\t\ttransferrables.push( index );\n\n\t\t\t}\n\n\t\t\tworker.postMessage( {\n\n\t\t\t\tindex,\n\t\t\t\tposition,\n\t\t\t\toptions: {\n\t\t\t\t\t...options,\n\t\t\t\t\tonProgress: null,\n\t\t\t\t\tincludedProgressCallback: Boolean( options.onProgress ),\n\t\t\t\t\tgroups: [ ... geometry.groups ],\n\t\t\t\t},\n\n\t\t\t}, transferrables.map( arr => arr.buffer ) );\n\n\t\t} );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.worker.terminate();\n\t\tthis.worker = null;\n\n\t}\n\n\tterminate() {\n\n\t\tconsole.warn( 'GenerateMeshBVHWorker: \"terminate\" is deprecated. Use \"dispose\" instead.' );\n\t\tthis.dispose();\n\n\t}\n\n}\n","let workerURL = require('./helpers/get-worker-url');\nlet url = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"jsyN8\"));\nmodule.exports = workerURL(url.toString(), url.origin, true);","\"use strict\";\n\nmodule.exports = function (workerUrl, origin, isESM) {\n  if (origin === self.location.origin) {\n    // If the worker bundle's url is on the same origin as the document,\n    // use the worker bundle's own url.\n    return workerUrl;\n  } else {\n    // Otherwise, create a blob URL which loads the worker bundle with `importScripts`.\n    var source = isESM ? 'import ' + JSON.stringify(workerUrl) + ';' : 'importScripts(' + JSON.stringify(workerUrl) + ');';\n    return URL.createObjectURL(new Blob([source], {\n      type: 'application/javascript'\n    }));\n  }\n};","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"9FUoI\\\":\\\"aoRender.04fa35ac.js\\\",\\\"jsyN8\\\":\\\"generateAsync.worker.b2811d07.js\\\"}\"));"],"names":["$18c11f3350a906ea$export$6503ec6e8aabbaf","$18c11f3350a906ea$export$f7ad0328861e2f03","$18c11f3350a906ea$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","$hWj76","parcelRequire","$968516f0efc273ba$export$5499aeafc5a5667b","PathTracingSceneGenerator","constructor","super","this","bvhGenerator","$a8VBx","GenerateMeshBVHWorker","generate","scene","options","geometry","materials","textures","lights","spotLights","prepScene","bvhOptions","strategy","$8Zfx2","SAH","maxLeafTris","then","bvh","dispose","$ilwiq","$d0f6adfc7402c638$export$245b5237bb7038ea","Array","isArray","meshes","l","traverseVisible","c","isSkinnedMesh","isMesh","morphTargetInfluences","generator","StaticGeometryGenerator","attributes","applyWorldTransforms","mesh","Mesh","material","matrixWorld","copy","matrix","decompose","position","quaternion","scale","push","isRectAreaLight","isSpotLight","$jM3IF","mergeMeshes","MeshBVH","$762755cd5891d020$export$426cc6213ad628cf","running","worker","Worker","onerror","e","message","Promise","resolve","reject","onmessage","data","error","serialized","$6KVZ3","deserialize","setIndex","boundsOptions","assign","setBoundingBox","array","index","newIndex","BufferAttribute","boundingBox","getBoundingBox","Box3","onProgress","progress","position1","isInterleavedBufferAttribute","transferrables","postMessage","includedProgressCallback","Boolean","groups","map","arr","buffer","terminate","console","warn","$7ryUf","$1e199522c06e4b04$var$url","URL","import","meta","url","module","exports","toString","origin","workerUrl","isESM","self","location","source","JSON","stringify","createObjectURL","Blob","type","register","parse"],"version":3,"file":"aoRender.04fa35ac.js.map"}